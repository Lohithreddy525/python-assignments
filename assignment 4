{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Welcome to Colaboratory",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Lohithreddy525/python-assignments/blob/master/assignment%204\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MJOfm4zK4sLi",
        "colab_type": "text"
      },
      "source": [
        "Assignment 4"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RbVsR7-E4tj4",
        "colab_type": "text"
      },
      "source": [
        "Question 1"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T2cBDRhP4ur4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "outputId": "10f2e09f-edcb-4bf3-ba2b-e69ddfb4bcb0"
      },
      "source": [
        " def max_of_three(a,b,c):\n",
        "    if a>b and a>c:\n",
        "        print(a,\"is the maximum of the three numbers.\")\n",
        "    elif b>c and b>a:\n",
        "        print(b,\"is the maximum of the three numbers.\")\n",
        "    else:\n",
        "        print(c,\"is the maximum of the three numbers.\")\n",
        "max_of_three(34,67,89)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "89 is the maximum of the three numbers.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pm5AqaOa405w",
        "colab_type": "text"
      },
      "source": [
        "Question 2"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wi-2Gmso416p",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 71
        },
        "outputId": "2baac703-bde7-407f-97ad-bab5b704ae0f"
      },
      "source": [
        " def reverse_string(str):\n",
        "    print(\"The string before reversing is: \",str)\n",
        "    print(\"The string after reversing is: \",str[::-1])\n",
        "reverse_string(\"Apprenticeship\")"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The string before reversing is:  Apprenticeship\n",
            "The string after reversing is:  pihsecitnerppA\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iiH3jMbN47UO",
        "colab_type": "text"
      },
      "source": [
        "Question 3"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YQyi6m6L48nB",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "2785712b-97cf-4a46-8fb8-ad5ededfc774"
      },
      "source": [
        " def prime_check(num):\n",
        "    if num<0:\n",
        "        print(\"Negative numbers cannot be prime.\")\n",
        "    elif num==0 and num==1:\n",
        "        print(\"It is neither prime nor composite.\")\n",
        "    elif num==2:\n",
        "        print(\"2 is the only even prime number.\")\n",
        "    elif num>2:\n",
        "        for i in range(2,num):\n",
        "            if num%i==0:\n",
        "                print(\"It is not a prime number.\")\n",
        "                break\n",
        "        else:\n",
        "            print(\"It is a prime number.\")\n",
        "prime_check(23)"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "It is a prime number.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RUjY_Rwb5QG7",
        "colab_type": "text"
      },
      "source": [
        "Question 5"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L1BEnwA_5Rac",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "outputId": "d3cfa27d-22bb-4445-909e-3a66093696fb"
      },
      "source": [
        " def sum_of_squares(num):\n",
        "    sq_sum = 0\n",
        "    for i in range(1, num+1):\n",
        "        sq_sum = sq_sum + i**2\n",
        "    print(\"The sum of squares of the first\",num,\"natural numbers is:\",sq_sum)\n",
        "    \n",
        "sum_of_squares(3)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "The sum of squares of the first 3 natural numbers is: 14\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}